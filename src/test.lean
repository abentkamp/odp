import .missing .missing_measure
open measure_theory ennreal
open_locale ennreal


variables {Œ© : Type} (P : list Œ©) (O : Type)

variables (X : Type) 

structure odp_partition  {O : Type} (M : list O) :=
(dp : M = M)


structure adversary_choice :=
(M : list O)
(odp_partition : odp_partition M)

constant ch (O : Type) : adversary_choice O
constant ch' (O : Type) : adversary_choice O

structure adversary :=
(choose :  adversary_choice O)

constant iv : adversary O ‚Üí adversary O

lemma my_lemma : ch O = ch' O := sorry

example {Œ± : Type} (ùíú : adversary O) (m : ‚Ñï)
: 
 (Œª (a : Œ±), adversary_choice.odp_partition (ch O ))
=  (Œª (a : Œ±), adversary_choice.odp_partition  (ch O ))
:=
begin
simp_rw [my_lemma],
end